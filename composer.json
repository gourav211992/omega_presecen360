{
    "nagit": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": ["laravel", "framework"],
    "license": "MIT",
    "require": {
        "php": "^8.1",
        "barryvdh/laravel-dompdf": "^3.0",
        "doctrine/dbal": "^3.9",
        "endroid/qr-code": "^5.0",
        "guzzlehttp/guzzle": "^7.2",
        "kwn/number-to-words": "^2.9",
        "laravel/framework": "^10.10",
        "laravel/passport": "^12.4",
        "laravel/sanctum": "^3.3",
        "laravel/tinker": "^2.8",
        "lcobucci/jwt": "^5.4",
        "maatwebsite/excel": "^3.1",
        "milon/barcode": "^12.0",
        "peterpetrus/passport-token": "^0.1.0",
        "phpoffice/phppresentation": "^1.1",
        "phpoffice/phpspreadsheet": "^1.29",
        "phpoffice/phpword": "^1.3",
        "spatie/laravel-medialibrary": "*",
        "swiftmailer/swiftmailer": "^6.3",
        "symfony/console": "^6.0",
        "symfony/polyfill-iconv": "^1.30",
        "yajra/laravel-datatables-oracle": "*",
        "p360/core": "^2.0",
        "p360/erp": "^1.0",
        "p360/iam": "^2.0",
        "p360/sso": "^1.0",
        "p360/view": "^2.0",
        "p360/client-config": " ^v1.0"
    },
    "require-dev": {
        "fakerphp/faker": "^1.9.1",
        "kitloong/laravel-migrations-generator": "^7.0",
        "laravel/pint": "^1.0",
        "laravel/sail": "^1.18",
        "mockery/mockery": "^1.4.4",
        "nunomaduro/collision": "^7.0",
        "phpunit/phpunit": "^10.1",
        "spatie/laravel-ignition": "^2.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@php -r \"if (!is_dir('storage/logs')) { mkdir('storage/logs', 0777, true); } file_put_contents('storage/logs/laravel.log', '');\"",
            "@php -r \"if (!is_link('public/storage') && !is_dir('public/storage')) { passthru(escapeshellarg(PHP_BINARY).' artisan storage:link'); }\"",
            "@php -r \"if (!is_dir('storage/app/public')) { mkdir('storage/app/public', 0777, true); } if (file_exists('storage/app/public/laravel.txt') || is_link('storage/app/public/laravel.txt')) { unlink('storage/app/public/laravel.txt'); } symlink('../../logs/laravel.log', 'storage/app/public/laravel.txt');\""
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --provider=\"P360\\Core\\P360CoreServiceProvider\" --tag=\"p360-core-config\" --force",
            "@php artisan vendor:publish --provider=\"P360\\SSO\\P360SSOServiceProvider\" --tag=\"p360-auth-config\" --force",
            "@php artisan p360:link-assets",
            "@php artisan cache:clear",
            "@php artisan view:clear",
            "@php artisan config:clear",
            "@php -r \"if (!is_dir('storage/logs')) { mkdir('storage/logs', 0777, true); } file_put_contents('storage/logs/laravel.log', '');\"",
            "@php -r \"if (!is_link('public/storage') && !is_dir('public/storage')) { passthru(escapeshellarg(PHP_BINARY).' artisan storage:link'); }\"",
            "@php -r \"if (!is_dir('storage/app/public')) { mkdir('storage/app/public', 0777, true); } if (file_exists('storage/app/public/laravel.txt') || is_link('storage/app/public/laravel.txt')) { unlink('storage/app/public/laravel.txt'); } symlink('../../logs/laravel.log', 'storage/app/public/laravel.txt');\""
        ],
        "post-root-package-install": [
            "@php artisan vendor:publish --provider=\"P360\\Core\\P360CoreServiceProvider\" --tag=\"p360-core-config\" --force",
            "@php artisan vendor:publish --provider=\"P360\\SSO\\P360SSOServiceProvider\" --tag=\"p360-auth-config\" --force",
            "@php artisan p360:link-assets",
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
             "@php -r \"if (!is_dir('storage/logs')) { mkdir('storage/logs', 0777, true); } file_put_contents('storage/logs/laravel.log', '');\"",
            "@php -r \"if (!is_link('public/storage') && !is_dir('public/storage')) { passthru(escapeshellarg(PHP_BINARY).' artisan storage:link'); }\"",
            "@php -r \"if (!is_dir('storage/app/public')) { mkdir('storage/app/public', 0777, true); } if (file_exists('storage/app/public/laravel.txt') || is_link('storage/app/public/laravel.txt')) { unlink('storage/app/public/laravel.txt'); } symlink('../../logs/laravel.log', 'storage/app/public/laravel.txt');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
